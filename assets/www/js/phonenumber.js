// Generated by CoffeeScript 1.3.3
(function() {
  var PhoneNumber, root;

  PhoneNumber = (function() {

    function PhoneNumber(value, type) {
      this.value = value;
      this.type = type;
      if (typeof this.value === 'number') {
        this.value = this.value.toString();
      }
      if (this.value != null) {
        this.cleanValue = this.removeDelimiters();
      }
    }

    PhoneNumber.prototype.hasValidChars = function() {
      return (this.value != null) && !/[^\d\(\)\+\-\. ]/.test(this.value);
    };

    PhoneNumber.prototype.removeDelimiters = function() {
      return this.value.replace(/[\(\)\-\. ]/g, '');
    };

    PhoneNumber.prototype.isEcuadorian = function() {
      if (this.value != null) {
        this.cleanValue = this.removeDelimiters();
        return /^(\+593|0)/.test(this.cleanValue);
      } else {
        return false;
      }
    };

    PhoneNumber.prototype.hasValidLength = function() {
      if (this.value != null) {
        this.cleanValue = this.removeDelimiters();
        return (this.cleanValue[0] === '+' && this.cleanValue.length === 12) || (this.cleanValue[0] === '0' && this.cleanValue.length === 9);
      } else {
        return false;
      }
    };

    PhoneNumber.prototype.isUpdatableEcuadorianMobile = function() {
      var _ref;
      if (this.value != null) {
        if (this.hasValidChars() && this.isEcuadorian() && this.hasValidLength()) {
          if ((_ref = this.cleanValue.match(/^(\+593|0)(\d)/)[2]) === '8' || _ref === '9') {
            return 'yes';
          } else {
            return 'maybe';
          }
        } else {
          return 'no';
        }
      } else {
        return 'no';
      }
    };

    PhoneNumber.prototype.updateEcuadorianMobile = function(forceMaybe) {
      if (this.value != null) {
        switch (this.isUpdatableEcuadorianMobile()) {
          case 'yes':
            return this.updatedValue = this.cleanValue.replace(/^(\+593|0)(\d)/, '$19$2');
          case 'maybe':
            return this.updatedValue = forceMaybe ? this.cleanValue.replace(/^(\+593|0)(\d)/, '$19$2') : this.value;
          case 'no':
            return this.updatedValue = this.value;
        }
      } else {
        return null;
      }
    };

    return PhoneNumber;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.PhoneNumber = PhoneNumber;

}).call(this);
