// Generated by CoffeeScript 1.3.3
(function() {
  var $, onContactError, onContactSuccess, updateCount, updateList;

  $ = jQuery;

  updateCount = function() {
    switch ($('#show-filter-fieldset :checked').val()) {
      case 'all':
        return $('#count-info').text("" + ($('#valid-contacts li :checked').length) + " de " + ($('#valid-contacts li :checkbox').length));
      case 'only-checked':
        return $('#count-info').text("" + ($('#valid-contacts li :checkbox:visible').length));
      case 'only-unchecked':
        return $('#count-info').text("" + ($('#valid-contacts li :checkbox:visible').length));
    }
  };

  updateList = function() {
    $('#valid-contacts li, #valid-contacts li .ui-checkbox').show();
    switch ($('#show-filter-fieldset :checked').val()) {
      case 'only-checked':
        $('#valid-contacts li :checkbox:not(:checked)').parents('.ui-checkbox').hide();
        break;
      case 'only-unchecked':
        $('#valid-contacts li :checkbox:checked').parents('.ui-checkbox').hide();
    }
    $('#valid-contacts li:not(:has(.ui-checkbox:visible))').hide();
    return updateCount();
  };

  onContactSuccess = function(contacts) {
    var $contact, $contactsList, checked, contact, i, j, number, phoneNumber, _i, _j, _len, _len1, _ref;
    $contactsList = $();
    if (contacts != null) {
      for (i = _i = 0, _len = contacts.length; _i < _len; i = ++_i) {
        contact = contacts[i];
        if (contact.name == null) {
          continue;
        }
        $contact = $("<li>\n  <h3>" + contact.name.formatted + "</h3>\n  <fieldset data-mini=\"true\"></fieldset>\n</li>");
        if (contact.phoneNumbers != null) {
          _ref = contact.phoneNumbers;
          for (j = _j = 0, _len1 = _ref.length; _j < _len1; j = ++_j) {
            number = _ref[j];
            phoneNumber = new PhoneNumber(number.value);
            switch (phoneNumber.isUpdatableEcuadorianMobile()) {
              case 'yes':
                checked = 'checked';
                break;
              case 'maybe':
                checked = '';
                break;
              case 'no':
                continue;
            }
            $contact.children('fieldset').append("<label>\n  <input type=\"checkbox\" name=\"contacts[" + contact.id + "][" + j + "]\" " + checked + " data-theme=\"b\"\n    data-idx=\"" + i + "\" data-old-number=\"" + phoneNumber.value + "\"\n    data-new-number=\"" + (phoneNumber.updateEcuadorianMobile(true)) + "\">\n  [" + contact.id + "][" + j + "] " + number.type + ": " + number.value + "\n</label>");
          }
          if ($contact.find('label').length) {
            $contactsList = $contactsList.add($contact);
          }
        }
      }
    }
    if ($contactsList.length) {
      $('#valid-contacts').append($contactsList.tsort());
      $('#contacts .footer').show();
      updateCount();
    } else {
      $('#contacts-content').html('<p>No se cargó ningún contacto.</p>');
      $('#contacts .footer').hide();
    }
    return $('#contacts').on('tap', '#update-button', function() {
      var checkedContacts;
      checkedContacts = $('#valid-contacts li :checkbox:checked').map(function() {
        var matches, retObj;
        matches = $(this).attr('name').match(/\[(\d+)\]\[(\d+)\]/);
        retObj = {
          contactId: matches[1],
          numberIdx: matches[2],
          oldNumber: $(this).attr('data-old-number'),
          newNumber: $(this).attr('data-new-number')
        };
        contacts[$(this).data('idx')].phoneNumbers[retObj.numberIdx].value = retObj.newNumber;
        contacts[$(this).data('idx')].save(function() {
          return console.log("Saved contact " + retObj.contactId + "-" + retObj.numberIdx);
        }, function(err) {
          return console.log("ERRCODE: " + (JSON.stringify(err)) + ", error saving contact " + retObj.contactId + "-" + retObj.numberIdx);
        });
        return retObj;
      });
      return console.log(JSON.stringify(checkedContacts.get()));
    });
  };

  onContactError = function(err) {
    return $('#contacts-content').html("<p>Error al cargar los contactos: " + err.code + "</p>");
  };

  $(document).on('deviceready', function() {
    return navigator.contacts.find(["*"], onContactSuccess, onContactError);
  });

  /*
   * jQuery Mobile events
  */


  $(document).on('mobileinit', function() {
    $.mobile.ajaxEnabled = false;
    $.mobile.buttonMarkup.hoverDelay = 100;
    $.mobile.defaultPageTransition = 'none';
    return $.mobile.pushStateEnabled = false;
  });

  $(document).on('pageinit', function() {});

  $(document).on('pagechange', function() {});

  $(function() {
    $('#contacts').on('change', '#valid-contacts li :checkbox', updateCount);
    return $('#contacts').on('change', '#show-filter-fieldset input', updateList);
  });

}).call(this);
